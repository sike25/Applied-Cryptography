##############################################################################################
### HELPER FUNCTIONS

def arrangeInMs(str):
    # Split the string into bytes
    bytes_list = str.split()
    # Group the bytes into chunks of 10
    chunks = [bytes_list[i:i + 16] for i in range(0, len(bytes_list), 16)]
    # Join each group of 10 bytes into a string and store in the final list
    list_of_chunks = [' '.join(chunk) for chunk in chunks]
    # Output the list
    return list_of_chunks

def xorHexStrings(stra, strb):
    # Remove spaces and convert to integers
    inta = int(stra.replace(" ", ""), 16)
    intb = int(strb.replace(" ", ""), 16)

    # XOR the integers
    result_int = inta ^ intb

    # Convert the result back to hex, removing the '0x' prefix and making it uppercase
    return format(result_int, 'x').upper()

def toAscii(str):
    return bytes.fromhex(str).decode('ascii')

###################################################################################################

version_1_str
version_11_str

version_1 = arrangeInMs(version_1_str)
version_11 = arrangeInMs(version_11_str)

previous_m = '20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20'
message = ''

for i in range(8, len(version_11)):
    m_plus_m = xorHexStrings(version_1[i], version_11[i])
    decryption = xorHexStrings(m_plus_m, previous_m)
    previous_m = decryption  
    message += toAscii(decryption)

print(message)

    